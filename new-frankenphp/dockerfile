FROM composer:latest AS composer

FROM dunglas/frankenphp:php8.3

# ユーザーとグループの設定
ARG USER_ID=1000
ARG GROUP_ID=1000

# システムの依存関係をインストール
RUN apt-get update && apt-get install -y \
    libssl-dev \
    libcurl4-openssl-dev \
    libpq-dev \
    libzip-dev \
    libicu-dev \
    unzip \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# PHP拡張をインストール
RUN install-php-extensions gd \
    pcntl \
    pdo \
    pdo_mysql \
    intl \
    zip \
    opcache \
    opentelemetry \
    bcmath

# ユーザーとグループを作成（sudo権限は削除）
RUN groupadd -g ${GROUP_ID} appuser && \
    useradd -u ${USER_ID} -g ${GROUP_ID} -m -s /bin/bash appuser

WORKDIR /app

# Composerをコピー
COPY --from=composer /usr/bin/composer /usr/bin/composer
COPY --chown=appuser:appuser ./composer.json ./composer.lock ./
RUN composer install --no-autoloader
RUN composer dump-autoload  --optimize --no-scripts

# アプリケーションファイルをコピー（.dockerignoreを使用して不要ファイルを除外）
COPY --chown=appuser:appuser . .

COPY --chown=appuser:appuser --chmod=775 ./storage ./storage
COPY --chown=appuser:appuser --chmod=775 ./bootstrap/cache ./bootstrap/cache


# .envファイルの準備
RUN if [ -f .env.example ]; then \
        cp .env.example .env; \
    fi && \
    if [ -f .env ]; then \
        chmod 644 .env; \
    fi

# Caddyログディレクトリを作成
RUN mkdir -p /var/log/caddy && chown appuser:appuser /var/log/caddy

# Caddyの設定とデータディレクトリを作成
RUN mkdir -p /config/caddy /data/caddy /data/caddy/locks && \
    chown -R appuser:appuser /config/caddy /data/caddy

RUN chown appuser:appuser /app

# PHP設定ファイルをコピー
COPY ./php.ini /usr/local/etc/php/conf.d/performance.ini

RUN php artisan octane:install --server=frankenphp --no-interaction

# appuserに切り替え
USER appuser

# バックポートを指定してCaddyを起動する
CMD ["php", "artisan", "octane:start", "--host=0.0.0.0",  "--port=80", "--admin-port=2019", "--workers=4"]