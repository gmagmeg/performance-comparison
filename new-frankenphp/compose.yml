services:
  app:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "9400:80" # HTTP
      - "9401:443" # HTTPS
      - "443:443/udp" # HTTP/3
    volumes:
      # 開発環境用の限定的なマウント
      - ./:/app
    restart: always
    depends_on:
      - mysql
    networks:
      - new-frankenphp-network
    environment:
      - FRANKENPHP_CONFIG="worker public/index.php"
      - OTEL_SERVICE_NAME=frankenphp-app
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_PHP_TRACES_PROCESSOR=simple
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_PHP_DISABLED_INSTRUMENTATIONS=all

  jaeger:
    image: jaegertracing/jaeger:2.7.0
    ports:
      - "16686:16686"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - new-frankenphp-network

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - new-frankenphp-network

networks:
  new-frankenphp-network:
    driver: bridge
    
volumes:
  mysql_data: